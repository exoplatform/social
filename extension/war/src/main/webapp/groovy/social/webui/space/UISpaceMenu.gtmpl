<%
/*
<!--
    Copyright (C) 2003-2011 eXo Platform SAS.

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program. If not, see <http://www.gnu.org/licenses/>.

-->
*/
%>
<%
  import org.exoplatform.portal.webui.util.Util;
  import org.exoplatform.social.webui.Utils;
  import org.exoplatform.social.core.space.SpaceUtils;
  import org.exoplatform.social.core.service.LinkProvider;

  def uicomponentId = uicomponent.id;
	
  //SpaceUtils.reloadNavigation();
  def apps = uicomponent.getApps();
  def spaceUrl = Utils.getSpaceUrlByContext();
  def space = uicomponent.getSpace(spaceUrl);
  def spaceHomeUrl = Utils.getSpaceHomeURL(space);
  def appSelected = uicomponent.getAppSelected();
  def srcDefaultAppIcon = "/eXoResources/skin/sharedImages/Icon80x80/DefaultPortlet.png";
  
  public String getFitString(String nodeLabel, int maxLen) {
    def labelStr = "";
    def labelStrPrev = "";
    def appendLabel = " ...";
    def fitStr = nodeLabel;
    if (fitStr == null) {
      return "";
    }
    if (fitStr.length() > maxLen) {
      def labels = fitStr.split(" ");
      for (i in 0..(labels.size()-1)) {
        labelStr += " ";
        labelStr += labels[i];
        if (labelStr.length() > maxLen) {
          break;
        } else {
          labelStrPrev = labelStr;
        }
      }
      if (labelStrPrev.length() == 0) {
        fitStr = fitStr.substring(0, maxLen - 2) + appendLabel;
      } else {
        fitStr = labelStrPrev + appendLabel;
      }
    }
    return fitStr;
  }

  def moreLabel = _ctx.appRes("${uicomponentId}.label.More");
  def jsManager = _ctx.getRequestContext().getJavascriptManager();
  jsManager.require("SHARED/social-ui-space-nav", "spacenav").addScripts("spacenav.addEditability('" + uicomponent.id + "','" + moreLabel + "');");
  def srcAppIcon;
  def appName;
  def uiIconAppSpaceActivityStreamPortlet = "uiIconAppSpaceActivityStreamPortlet";
%>

<div class="uiSpaceMenu clearfix" id="UISpaceMenu">
  <%
    def activityStreamLabel = _ctx.appRes(uicomponent.getId() + ".label.ActivityStream");
  %>
  
  <ul class="nav nav-tabs spaceMenuTab" id="spaceMenuTab" style="visibility: hidden;">
    <% if (spaceUrl.equals(appSelected)) { %>
    <li class="active">
      <a data-toggle="tab" onclick="location.href='<%= spaceHomeUrl %>'" href="javascript:void(0);">
        <i class="uiIconAppSpaceActivityStreamPortlet uiIconDefaultApp"></i>
        <span class="tabName">$activityStreamLabel</span>
      </a>
    </li>
    <% } else { %>
    <li class="">
      <a data-toggle="tab" onclick="location.href='<%= spaceHomeUrl %>'" href="javascript:void(0);">
        <i class="uiIconAppSpaceActivityStreamPortlet uiIconDefaultApp"></i>
        <span class="tabName"> $activityStreamLabel</span>
      </a>
    </li>
    <% } %>
  
  
  <%
  for(node in apps) {
    if ( uicomponent.HIDDEN.equals(node.getVisibility().toString()) ) {
      continue;
    }
    def nodeTitle = node.getResolvedLabel();
    def nodeLabel = getFitString(nodeTitle, 15);
    def nodeUri = node.getURI();
    def uriParts = nodeUri.split("/");
    def nodeName = uriParts[uriParts.length - 1];
    if ( node.getPageRef() != null ) {
      appName = node.getPageRef().getName();
    }
    
    def pName = uicomponent.getAppIdByAppName(appName);
  %>
  <% if(nodeName.equals(appSelected)) {%>
       <li class="active">
         <a data-toggle="tab" href="javascript:void(0);">
           <i class="uiIconApp<%=pName%> uiIconDefaultApp"></i>
           <span id='$nodeName' class="tabName">$nodeLabel</span>
         </a>
       </li>
  <% } else {
     def pageURI = Utils.getSpaceHomeURL(space) + "/" + nodeName;
  %>
       <li class="">
         <a data-toggle="tab" onclick="location.href='<%= pageURI %>'" href="javascript:void(0);">
           <i class="uiIconApp<%=pName%> uiIconDefaultApp"></i>
           <span id='$nodeName' class="tabName">$nodeLabel</span>
         </a>
       </li>
  <% }%>
  <%
  }
  %>
  </ul>
     

</div>
