<%
/*
<!--
    Copyright (C) 2003-2011 eXo Platform SAS.

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program. If not, see <http://www.gnu.org/licenses/>.

-->
*/
%>
<%
  import org.exoplatform.portal.webui.util.Util;
  import org.exoplatform.social.webui.Utils;
  import org.exoplatform.social.core.space.SpaceUtils;
  import org.exoplatform.social.core.service.LinkProvider;

  def uicomponentId = uicomponent.id;

  //SpaceUtils.reloadNavigation();
  def apps = uicomponent.getApps();
  def spaceUrl = SpaceUtils.getSpaceUrl();
  def space = uicomponent.getSpace(spaceUrl);
  def appSelected = uicomponent.getAppSelected();
  def imageSource = uicomponent.getImageSource();
  if (imageSource == null) {
    imageSource = LinkProvider.SPACE_DEFAULT_AVATAR_URL;
  }
  def spaceAvatarTitle = _ctx.appRes("${uicomponentId}.title.SpaceAvatar");

  public String getFitString(String nodeLabel, int maxLen) {
    def labelStr = "";
    def labelStrPrev = "";
    def appendLabel = " ...";
    def fitStr = nodeLabel;
    if (fitStr == null) {
      return "";
    }
    if (fitStr.length() > maxLen) {
      def labels = fitStr.split(" ");
      for (i in 0..(labels.size()-1)) {
        labelStr += " ";
        labelStr += labels[i];
        if (labelStr.length() > maxLen) {
          break;
        } else {
          labelStrPrev = labelStr;
        }
      }
      if (labelStrPrev.length() == 0) {
        fitStr = fitStr.substring(0, maxLen - 2) + appendLabel;
      } else {
        fitStr = labelStrPrev + appendLabel;
      }
    }
    return fitStr;
  }

  def spaceName = uicomponent.getSpaceName();
  def spaceNameDisplay = spaceName;
  def homeUrl = Utils.getSpaceHomeURL(space);
  def settingsLabel = _ctx.appRes(uicomponent.getId() + ".label.Settings");
  def titleEditable = _ctx.appRes(uicomponent.getId() + ".label.Editable_Title_Element");
  def pcontext = Util.getPortalRequestContext();
  def jsManager = pcontext.getJavascriptManager();
  jsManager.importJavascript("debug", "/social-resources/javascript");
  jsManager.importJavascript("ie-patch", "/social-resources/javascript");
  jsManager.importJavascript("eXo-patch", "/social-resources/javascript");
  jsManager.importJavascript("eXo.social.Util", "/social-resources/javascript");
  jsManager.importJavascript("eXo.social.webui.UINavigationTabs", "/social-resources/javascript");
  jsManager.importJavascript("eXo.social.webui.UISpaceAppNameEdition","/social-resources/javascript");

  //params for UINavigationTabs
  def containerId = "SpaceApplicationTabsContainer";
  def displayElements = 7;
  def pageScrolled = false; //navigate from item to item.
  def previousLabel = _ctx.appRes("${uicomponentId}.label.previous");
  def nextLabel = _ctx.appRes("${uicomponentId}.label.next");
  def allLabel = _ctx.appRes("${uicomponentId}.label.all");

  def params ="""
  {
    displayedElements:$displayElements,
    pageScrolled:$pageScrolled,
    messages: {previous: '$previousLabel', next: '$nextLabel'}
  }""";
  jsManager.addOnLoadJavascript("initUINavigationTabs");
%>

<div class="UISpaceMenu" id="UISpaceMenu">
  <script type="text/javascript">
    function initUINavigationTabs() {
      eXo.social.webui.UINavigationTabs.tabContainerId('$containerId').configure($params);
    }
  </script>
  <div class="SpaceMenuPortlet ClearFix">
    <div class="UISpaceName FL ">
      <a class="Avartar" href="$homeUrl"><img title="$spaceAvatarTitle" alt="$spaceAvatarTitle" src="$imageSource" width="35" height="35" /></a>
      <a title="$spaceName" href="$homeUrl" class="ProfTitle">$spaceNameDisplay</a>
      <% if (uicomponent.hasSettingPermission()) { %>
      <a class="SpaceSettingIcon" href='$homeUrl/settings' title="$settingsLabel"><span>&nbsp</span></a>
      <% }%>
    </div>

    <div class="UIHorizontalTabs">
      <div class="LeftHorizontalTabs">
        <div class="RightHorizontalTabs">
          <div class="CenterHorizontalTabs">
            <div id="$containerId" class="TabsContainer">
              <%
                def homeTabClass = "NormalTab";
                if(spaceUrl.equals(appSelected)) {
                  homeTabClass = "SelectedTab";
                }
                def homeLabel = _ctx.appRes(uicomponent.getId() + ".label.Home");
              %>
              <div class="UITab NormalTabStyle">
                <div class="$homeTabClass">
                  <div class="LeftTab">
                    <div class="RightTab">
                      <div class="MiddleTab">
                        <a class="HomeSpace" title="$homeLabel" href="$homeUrl">$homeLabel</a>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              <%
              def limit = 0; //to avoid flashy display on ui when js stuff init things
              for(node in apps) {
                limit +=1;
                def appTabClass = "NormalTab";
                def nodeTitle = node.getResolvedLabel();
                def nodeLabel = getFitString(nodeTitle, 15);
                def nodeUri = node.getURI();
                def uriParts = nodeUri.split("/");
                def nodeName = uriParts[uriParts.length - 1];
                def pageURI = Utils.getSpaceHomeURL(space) + "/" + nodeName;
                if(nodeName.equals(appSelected)) {
                  appTabClass = "SelectedTab";
                }
                if (!nodeName.equals("settings")) {

                def ondblclick = "eXo.social.webui.UISpaceAppNameEdition.showEditLabelInput(this," + "\"" + nodeTitle + "\"," + "\"" + titleEditable + "\")";
                def uiTabClass = "UITab NormalTabStyle";
                if (limit >= displayElements) {
                  uiTabClass = "UIHiddenTab NormalTabStyle";
                }
              %>
              <div class="$uiTabClass">
                <div class="$appTabClass">
                  <div class="LeftTab">
                    <div class="RightTab">
                      <div class="MiddleTab">
                      <% if(nodeName.equals(appSelected) && uicomponent.hasSettingPermission()) {%>
                        <span id='$nodeName' class="ApplicationAdd" ondblclick='$ondblclick'>$nodeLabel</span>
                      <% } else {%>
                        <a class="ApplicationAdd" title="$nodeTitle" href="$pageURI">$nodeLabel</a>
                      <% }%>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              <%
                }
              }
              %>
              <div class="AllButton">
                <a class="IconAll" title="all tab">$allLabel</a>
                <ul id="UISubTabId" class="UISubTab">
                <%
                def appClass = "";
                if (spaceUrl.equals(appSelected)) {
                  appClass = "SelectedApp";
                }
                %>
                  <li class="$appClass"><a href="$homeUrl" title="$homeLabel">$homeLabel</a></li>
                <%
                for(node in apps) {
                  def nodeTitle = node.getResolvedLabel();
                  def nodeLabel = getFitString(nodeTitle, 15);
                  def nodeUri = node.getURI();
                  def uriParts = nodeUri.split("/");
                  def nodeName = uriParts[uriParts.length - 1];
                  def pageURI = Utils.getSpaceHomeURL(space) + "/" + nodeName;
                  appClass = "";
                  if (nodeName.equals(appSelected)) {
                    appClass = "SelectedApp";
                  }
                  if (!nodeName.equals("settings")) {
                %>
                  <li class="$appClass"><a href="$pageURI" title="$nodeTitle">$nodeLabel</a></li>
                <%
                  }
                }
                %>
                </ul><!--end dropbox-->
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
