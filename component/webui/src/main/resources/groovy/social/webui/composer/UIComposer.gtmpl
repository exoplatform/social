<%
/*
<!--

    Copyright (C) 2003-2010 eXo Platform SAS.

    This program is free software; you can redistribute it and/or
    modify it under the terms of the GNU Affero General Public License
    as published by the Free Software Foundation; either version 3
    of the License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, see<http://www.gnu.org/licenses/>.

-->
*/
%>
<%
  import org.exoplatform.webui.core.UIPopupWindow;
  import org.exoplatform.webui.form.UIFormTextAreaInput;
  import org.exoplatform.social.webui.composer.UIComposer;
  import org.exoplatform.social.webui.composer.UIActivityComposerContainer;
  import org.exoplatform.social.webui.composer.UIDefaultActivityComposer;
  import org.exoplatform.social.core.service.LinkProvider;

  def requestContext = _ctx.getRequestContext();

  //trick here, uiform does not keep submitAction for second render, portal bug?
  uicomponent.setSubmitAction("return false;");

  def jsManager = requestContext.getJavascriptManager();
  def defaultInput = _ctx.appRes("${uicomponent.id}.input.Write_Something");
  def addLabel = _ctx.appRes("${uicomponent.id}.label.Add");
  def shareLabel = _ctx.appRes("${uicomponent.id}.label.Share");
  def blastInput = "BlastInputSpace";

  if (uicomponent.getPostContext().toString().equals("USER") && uicomponent.isActivityStreamOwner()) {
    defaultInput = _ctx.appRes("${uicomponent.id}.input.What_Are_You_Working_On");
    blastInput = "BlastInputPeople";
  }

  jsManager.importJavascript("eXo.social.Util", LinkProvider.JAVASCRIPT_RESOURCE_URL);
  jsManager.importJavascript("eXo.social.webui.UIComposer", LinkProvider.JAVASCRIPT_RESOURCE_URL);
  def params = """
    {
      composerId: '${uicomponent.getChild(UIFormTextAreaInput.class).getId()}',
      defaultInput: '$defaultInput',
      focusColor: null,
      blurColor: null,
      minHeight: null,
      maxHeight: null,
      padding: '11px 0 11px 8px',
      focusHeight: null,
      focusCallback: null,
      blurCallback: null,
      keypressCallback: null,
      postMessageCallback: null
    }
  """

  jsManager.addOnLoadJavascript("initUIComposer");
  jsManager.addOnLoadJavascript("handleShareButton");
%>
<div class="$uicomponent.id">
<script type="text/javascript">
  var uicomposer = uicomposer || null;
  function initUIComposer() {
    if(uicomposer){
    	//get current value before re-init uicomposer instance
    	var value = uicomposer.getValue();

    	//re-init uicomposer
    	uicomposer.init();

    	//re-assign value for appropriate objects
    	uicomposer.composer.value = value;
    	document.getElementById("composerInput").value = value;
      uicomposer.composer.style.color = uicomposer.focusColor;

    	//this if clause used for enable Share button when there was text on composer input and the composer returns back to DefaultComposer
    	if(value != "" && value != uicomposer.defaultInput){
          if(document.getElementById("ComposerContainer") == null){
            //must this timeout 'cause it will override the value set by server side
            window.setTimeout( function(){uicomposer.shareButton.disabled = false;}, 200);
          }
    	} else {
    	  uicomposer.composer.style.color = uicomposer.blurColor;
    	}
    } else {
	    uicomposer = new eXo.social.webui.UIComposer($params);
    }
  }
</script>
  <% uiform.begin() %>
  <div class="BlastContainer">
    <div class="$blastInput">
      <% uicomponent.renderChild(UIFormTextAreaInput.class) %>
    </div>
    <div class="BlastShare ClearFix">
      <div class="AttachMents">
      $addLabel:
      <%
        def simpleName, labelSimpleName, actionEvent;
        def counter = 0;
        for(acComposer in uicomponent.getActivityComposers()) {
          counter++;
          simpleName = acComposer.getClass().getSimpleName();
          labelSimpleName = _ctx.appRes("UIActivityComposer.label.${simpleName}");
          if (acComposer.isDisplayed()) {
            actionEvent = "Close";
          } else {
            actionEvent = "Activate";
          }
          if (counter > 1) {
      %>
        <a href="#" title="$labelSimpleName" class="$simpleName DottedLine" onclick="<%= acComposer.event("$actionEvent")%>; uicomposer.setCurrentValue();" >$labelSimpleName</a>
      <% } else { %>
        <a href="#" title="$labelSimpleName" class="$simpleName" onclick="<%= acComposer.event("$actionEvent")%>; uicomposer.setCurrentValue();" >$labelSimpleName</a>
      <%
         }
        }
      %>
      </div>

    <%
      def currentActivityComposer = uicomponent.getActivityComposerManager().getCurrentActivityComposer();
      def isReady = currentActivityComposer.isReadyForPostingActivity();

      if (!(currentActivityComposer instanceof UIDefaultActivityComposer)) {
    %>
      <div class="ComposerExtensionContainer">
        <div id="ComposerContainer" class="ClearFix">
          <%
            uicomponent.renderChild(UIActivityComposerContainer.class);
          %>
        </div>
      </div>
    <%
      }
    %>
      <script type="text/javascript">
        function setShareButtonDisable(state){
          var shareButton = document.getElementById("ShareButton");
          
          shareButton.disabled = state;
          if (state) shareButton.className = 'ShareButtonDisable';
          else shareButton.className = 'ShareButton'; 
        }

        function handleShareButton(){
          var shareButton = document.getElementById("ShareButton");
          <%
            if(currentActivityComposer.isReadyForPostingActivity()){
            
          %>
              shareButton.disabled = false;
              shareButton.className = 'ShareButton'; 
          <%
            } else {
          %>
            shareButton.disabled = true;
            shareButton.className = 'ShareButtonDisable'; 
          <%
            }
          %>
        }
      </script>
      <input class="ShareButton" id="ShareButton" type="submit" onclick="<%= uicomponent.event("PostMessage");%>; uicomposer.init();" value="$shareLabel"></input>
    </div>
  </div>
  <% uiform.end()%>
</div>