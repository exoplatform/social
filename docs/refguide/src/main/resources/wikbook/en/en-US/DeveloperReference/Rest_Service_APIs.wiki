Social REST Services APIs are dedicated for third parties to complete integrating and extending the Social capability and features. By using these REST APIs, the third parties can write any applications (desktop apps, mobile apps, web apps) to integrate with Social services and business.

{docbook}
<para>
<citetitle>
	<emphasis role="bold">Conventions</emphasis>
</citetitle>
</para>
{docbook}

The entry point for Social Rest service must be: _{{{/{rest_context_name}/private/api/social/{version}/{portalContainerName}/{social_resources}/}}}_. An example of activities resources: _/rest/private/api/social/v1-alpha3/portal/activity/_.

There are 3 types of parameters on each URL:

* *{{{{server_params}}}}*: this is the unchanged parameter for a specified server.
* *:id*: this param is for a specified data object, for example, activity Id and identity Id.
* *format*: this is the supported data format. It can be JSON, XML, RSS, or ATOM.

{note}
* Currently, only the basic authentication is supported. See [here|http://en.wikipedia.org/wiki/Basic_access_authentication] for more details.
* The JSON support is mandatory. The other format SHOULD be supported too (XML, RSS, ATOM). The supported formats will be specified by the detailed documentation for the REST resources.
* The _rest\_context\_name_ and _portal\_container\_name_ parameters are used as follows:
** In Social standalone: _rest\_context\_name_: _rest-socialdemo_; _portal\_container\_name_: _socialdemo_
** In eXo Platform: _rest\_context\_name_: _rest_; _portal\_container\_name_: _portal_
{note}

{docbook}
<para>
<prompt>
   <emphasis role="bold">See also</emphasis>
</prompt>
</para>
{docbook}

* [UI Extensions|#SOCref.DevelopersReferences.UIExtensions]

* [Overridable Components|#SOCref.DevelopersReferences.OverridableComponents]

* [Public Java APIs|#SOCref.DevelopersReferences.PublicJavaAPIs]

* [Java APIs sample code/ tutorial|#SOCref.DevelopersReferences.SampleCode_Tutorial]

* [Public REST APIs|#SOCref.DevelopersReferences.PublicREST_APIs]

* [Public Javascript APIs|#SOCref.DevelopersReferences.PublicJavascriptAPIs]

* [Social JCR Structure|#SOCref.Social_JCR_Structure]
* [Spaces Template configuration|#SOCref.Space_Template_Configuration]
* [Configure the 2-legged OAuth scenario|#SOCref.ConfigureOauth2_Legend_Scenario]

h1. Activity Resources  {anchor:id=SOCref.DevelopersReferences.RestService_APIs_v1alpha3.ActivityResources}
{include:document="jaxrs/generated/org.exoplatform.social.service.rest.api.ActivityResources.wiki"}

h1. Activity Stream Resources  {anchor:id=SOCref.DevelopersReferences.RestService_APIs_v1alpha3.ActivityStreamResources}
{include:document="jaxrs/generated/org.exoplatform.social.service.rest.api.ActivityStreamResources.wiki"}

h1. Identity Resources  {anchor:id=SOCref.DevelopersReferences.RestService_APIs_v1alpha3.IdentityResources}
{include:document="jaxrs/generated/org.exoplatform.social.service.rest.api.IdentityResources.wiki"}

h1. Version Resources  {anchor:id=SOCref.DevelopersReferences.RestService_APIs_v1alpha3.VersionResources}
{include:document="jaxrs/generated/org.exoplatform.social.service.rest.api.VersionResources.wiki"}